<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用 Webpack 和 Webpack Dev Server 打造前端專案環境</title>
      <link href="/posts/c3f7c839c7aa/"/>
      <url>/posts/c3f7c839c7aa/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="什麼是Webpack"><a href="#什麼是Webpack" class="headerlink" title="什麼是Webpack?"></a>什麼是Webpack?</h3><p>Webpack 是一個前端模組打包(module bundler)工具，提供模組化開發方式。將各種靜態資源視為模組(如不同語言vue、sass、js…)，它會從進入點(entry point)開始分析專案結構，找出每個模組間的依賴關係，並分析其中是否有瀏覽器不能直接使用的語法or檔案。最後將每個模組透過編譯方式，轉換成瀏覽器所支援的檔案(html、 css、 js…)打包至指定的輸出資料夾。</p><p>如下圖：</p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack.jpg" alt="webpack.jpg"></p><h3 id="為什麼要使用Webpack等前端打包工具"><a href="#為什麼要使用Webpack等前端打包工具" class="headerlink" title="為什麼要使用Webpack等前端打包工具?"></a>為什麼要使用Webpack等前端打包工具?</h3><p>隨著技術演進…前端不再是單純html、css、js，為了符合各種需求，開始開發各種框架、預處理器引進專案內，並使用模組化方式開發專案。然而瀏覽器並無法直接辨識這樣的專案內容，因此需要透過webpack等前端打包工具使用編譯的方式轉換成瀏覽器看得懂的內容。</p><h4 id="選擇webpack的原因"><a href="#選擇webpack的原因" class="headerlink" title="選擇webpack的原因"></a>選擇webpack的原因</h4><p>除了webpack當然還有許多打包工具，如gulp、parcel、esbuild等等，每個工具都有它的特點，而webpack是目前筆者在開發上順手的工具。</p><p>下圖為 <a href="https://2020.stateofjs.com/en-US/technologies/build-tools/">state of js</a> 的Build Tools調查，可以看到webpack至今使用率非常高。<br><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/2020-build-tool-rank.jpg" alt="2020-build-tool-rank.jpg"></p><h3 id="什麼是Webpack-Dev-Server"><a href="#什麼是Webpack-Dev-Server" class="headerlink" title="什麼是Webpack Dev Server?"></a>什麼是Webpack Dev Server?</h3><p>webpack-dev-server是webpack所開發的工具，它提供我們在開發中有一個基本的web server，並且具有  live reloading  功能。因此我們不需要等待每次從頭編譯煩人的時間～</p><p>在開發時，webpack只是幫我們做檔案編譯的動作而已，實際上我們還需要開一個web server才能瀏覽編譯後的檔案所渲染的網頁內容。</p><div class="note warning flat"><p><strong>live reloading (即時重載)</strong> ：常見又稱hot reload。主要闡述開發的同時能夠即時載入看到最新畫面<br>※webpack-dev-server提供 <strong>Hot Module Replacement(HMR)</strong> 模式，透過即時替換、添加或刪除模組來達到無須重新載入頁面即可看到最新畫面。</p></div><h3 id="Webpack-—watch-與-Webpack-Dev-Server差異"><a href="#Webpack-—watch-與-Webpack-Dev-Server差異" class="headerlink" title="Webpack —watch 與 Webpack Dev Server差異"></a>Webpack —watch 與 Webpack Dev Server差異</h3><p>先來解釋 <code>webpack --watch</code>。我們知道透過 <code>webpack</code> 指令會進行編譯動作，而 <code>webpack --watch</code> 則是執行編譯動作外，並且要啟用觀察模式；當檔案一有變動時就會立即重新編譯，所以不須每次手動輸入指令。</p><p>看到這會想說…欸～跟上面webpack-dev-server的概念好像一樣。沒錯，只不過詳細差別有：</p><div class="note info flat no-icon flat"><ul><li>webpack-dev-server有提供server</li><li>webpack-dev-server編譯之後不會寫入任何輸出檔案，而是將編譯後檔案存在記憶體內供server運行(畢竟只是當時開發用)</li><li>webpack-dev-server有HMR模式，無須刷新瀏覽器頁面即可看到最新畫面</li></ul></div><h2 id="實作重點"><a href="#實作重點" class="headerlink" title="實作重點"></a>實作重點</h2><ul><li>安裝webpack、webpack-cli、webpack-dev-server和webpack-merge</li><li>使用webpack –config、webpack-merge區分 dev 與 prod 環境設定檔</li><li>使用html-webpack-plugin自動輸出指定html並引入js</li><li>配置css、js、image模組編譯規則<ul><li>使用mini-css-extract-plugin輸出單獨CSS檔，支援CSS和SourceMap需要時載載入</li><li>使用css-loader處理在js中引入的css檔</li><li>使用optimize-css-assets-webpack-plugin優化、最小化CSS</li><li>使用babel-loader處理js語法轉換成能被瀏覽器支援的語法</li><li>使用file-loader處理引入的檔案物件、輸出目錄和它的url</li><li>使用url-loader將部分檔案轉base64編碼嵌入js中，以減少請求次數</li><li>使用image-webpack-loader將圖片壓縮優化</li></ul></li><li>安裝Vue(JavaScript Framework)、Tailwind CSS(CSS Framework)</li></ul><h2 id="建立新專案-amp-安裝Webpack相關套件"><a href="#建立新專案-amp-安裝Webpack相關套件" class="headerlink" title="建立新專案 &amp; 安裝Webpack相關套件"></a>建立新專案 &amp; 安裝Webpack相關套件</h2><h3 id="建立新專案"><a href="#建立新專案" class="headerlink" title="建立新專案"></a>建立新專案</h3><p>建立我們的專案目錄(webpack-dev-server-learning)，在專案目錄下輸入下方指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 參數-y為使用預設選項初始化</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>在目錄下會產生package.json檔，內容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;webpack-dev-server-learning&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info flat"><p><strong>npm(Node Package Manager)是基於Node.js的專案套件管理工具。</strong><br>透過npm，我們可以統一專案使用的套件版本以及設定環境，可以前往<a href="https://www.npmjs.com/">npm平台</a>查看所有提供的套件，其中套件的詳細資訊(Readme、依賴關係、安裝方式、github專案、下載數、各版本資訊)。<br>不同語言也有製作他們的套件管理工具，如：java的mvn</p></div><div class="note warning flat"><p><strong>在npm的世界我們一定要牢記的事：</strong></p><ul><li>有些套件還需要安裝其他依賴的套件才能使用</li><li>套件之間若有關聯會有版本相容問題</li><li>安裝前除了看套件的文件外，要去該套件的npm網站看各版本下載數，下載數多的相對較穩定，當然還是要記得<strong>版本相容</strong></li></ul></div><h3 id="安裝webpack、webpack-cli、webpack-dev-server和webpack-merge"><a href="#安裝webpack、webpack-cli、webpack-dev-server和webpack-merge" class="headerlink" title="安裝webpack、webpack-cli、webpack-dev-server和webpack-merge"></a>安裝webpack、webpack-cli、webpack-dev-server和webpack-merge</h3><p>首先解釋一下沒提到的webpack-cli、webpack-merge：</p><ul><li><strong>webpack-cli</strong> ：cli(Command-Line Interface)也就是命令列介面，由於webpack把cli部分獨立出來，因此我們需要安裝才能使用webpack的指令。</li><li><strong>webpack-merge</strong> ：幫助我們可以分別撰寫dev 和 prod 的 webpack設定檔</li></ul><h4 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h4><p>我這邊指定安裝webpack v4版本，以及其他下載數高的穩定版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --save-dev參數表示：套件關係只有在開發或測試的時候需要</span></span><br><span class="line">npm install webpack@4.46.0 webpack-dev-server@3.11.2 webpack-cli@3.3.12 webpack-merge@5.7.3 --save-dev</span><br></pre></td></tr></table></figure><p>安裝成功後，在package.json檔會幫我們新增內容，如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;webpack-dev-server-learning&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span>: <span class="string">&quot;^4.46.0&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span>: <span class="string">&quot;^3.3.12&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span>: <span class="string">&quot;^3.11.2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-merge&quot;</span>: <span class="string">&quot;^5.7.3&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="測試環節"><a href="#測試環節" class="headerlink" title="測試環節"></a>測試環節</h4><p>接著我們先來測試是否能使用吧！</p><ol><li><p>先建立src目錄，並且在src目錄建立index.js，如下圖：</p><p> <img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-src-index.jpg" alt="Untitled"></p></li><li><p>在package.json新增一條scripts，如下：(記得上一行的逗號)</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;webpack-dev-server-learning&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span>: <span class="string">&quot;^4.46.0&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span>: <span class="string">&quot;^3.3.12&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span>: <span class="string">&quot;^3.11.2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;webpack-merge&quot;</span>: <span class="string">&quot;^5.7.3&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>輸入下方指令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p> 若輸入結果如下圖就成功啦</p><p> <img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-install-output.jpg" alt="Untitled"></p></li></ol><h2 id="依-dev-和-prod-環境分別撰寫webpack設定檔"><a href="#依-dev-和-prod-環境分別撰寫webpack設定檔" class="headerlink" title="依 dev 和 prod 環境分別撰寫webpack設定檔"></a>依 dev 和 prod 環境分別撰寫webpack設定檔</h2><p>一般我們可以直接在根目錄撰寫 <code>webpack.config.js</code> 設定檔，但當我們開發與生產的環境設定不同時怎麼辦呢？若有些設定會相同，但又不想每次維護兩份檔案的話呢？</p><div class="note success flat"><ul><li>使用 <code>webpack --config</code> 參數來選取我們的需要的設定檔</li><li>使用 <code>webpack-merge</code> 套件幫助我們合併 <mark class="hl-label default">共用的</mark>  設定檔</li></ul></div><h3 id="依專案架構建立webpack設定檔"><a href="#依專案架構建立webpack設定檔" class="headerlink" title="依專案架構建立webpack設定檔"></a>依專案架構建立webpack設定檔</h3><h4 id="專案架構"><a href="#專案架構" class="headerlink" title="專案架構"></a>專案架構</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├── build</span><br><span class="line">│   ├── webpack.config.common.js <span class="comment"># 共用設定檔   </span></span><br><span class="line">│   ├── webpack.config.dev.js    <span class="comment"># 開發環境設定檔</span></span><br><span class="line">│   └── webpack.config.prod.js   <span class="comment"># 生產環境設定檔</span></span><br><span class="line">├── dist <span class="comment"># output輸出資料夾</span></span><br><span class="line">├── node_modules</span><br><span class="line">├── src</span><br><span class="line">│   └── index.js <span class="comment"># entry 入口點</span></span><br><span class="line">├── package-lock.json</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><h3 id="撰寫webpack共用設定檔-common"><a href="#撰寫webpack共用設定檔-common" class="headerlink" title="撰寫webpack共用設定檔(common)"></a>撰寫webpack共用設定檔(common)</h3><p>我們可以在webpack設定該專案編譯的根目錄(context)、入口點(entry)、輸出檔案名稱規則和位置(output)<br>可以看到我們的設定檔在build資料夾內，所以context必須指向外層才符合我們的需求</p><div class="tabs" id="依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack共用設定檔(common)"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack共用設定檔(common)-1">webpack.config.common.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack共用設定檔(common)-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">context</span>: path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>), <span class="comment">// 設定編譯時的根目錄</span></span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;[name].bundle.js&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><code>path</code> 為node.js的模組<br><code>__dirname</code> 則是回傳執行的 js 檔所在資料夾的絕對路徑</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="撰寫webpack開發環境設定檔-dev"><a href="#撰寫webpack開發環境設定檔-dev" class="headerlink" title="撰寫webpack開發環境設定檔(dev)"></a>撰寫webpack開發環境設定檔(dev)</h3><p>設定檔中的<code>commonWebpackConfig</code>是我們剛剛寫的共用設定檔，利用merge將開發環境的設定與其合併。</p><div class="tabs" id="依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack開發環境設定檔(dev)"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack開發環境設定檔(dev)-1">webpack.config.dev.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="依-dev-和-prod-環境分別撰寫webpack設定檔-撰寫webpack開發環境設定檔(dev)-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> commonWebpackConfig = <span class="built_in">require</span>(<span class="string">&quot;./webpack.config.common&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(commonWebpackConfig, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">port</span>: <span class="number">8080</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">      </span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><code>mode</code> 設置為開發環境<br><code>devServer</code> 設置在webpack-dev-server的server環境</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="撰寫webpack生產環境設定檔-prod"><a href="#撰寫webpack生產環境設定檔-prod" class="headerlink" title="撰寫webpack生產環境設定檔(prod)"></a>撰寫webpack生產環境設定檔(prod)</h3><p>大致設定與開發環境相同，<code>mode</code>改為生產環境、生產環境不需要使用dev-server</p><div class="tabs" id="依-dev-和-prod-環境分別撰寫webpack設定檔-寫webpack生產環境設定檔(prod)"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#依-dev-和-prod-環境分別撰寫webpack設定檔-寫webpack生產環境設定檔(prod)-1">webpack.config.prod.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="依-dev-和-prod-環境分別撰寫webpack設定檔-寫webpack生產環境設定檔(prod)-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> commonWebpackConfig = <span class="built_in">require</span>(<span class="string">&quot;./webpack.config.common&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(commonWebpackConfig, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;production&quot;</span>,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">      </span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="測試環節-1"><a href="#測試環節-1" class="headerlink" title="測試環節"></a>測試環節</h3><p>既然初步的webpack環境已經設定好了那就來測試是否能如期運行吧！</p><div class="tabs" id="依-dev-和-prod-環境分別撰寫webpack設定檔-功能測試"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#依-dev-和-prod-環境分別撰寫webpack設定檔-功能測試-1">開發環境</button></li><li class="tab"><button type="button" data-href="#依-dev-和-prod-環境分別撰寫webpack設定檔-功能測試-2">生產環境</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="依-dev-和-prod-環境分別撰寫webpack設定檔-功能測試-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>執行後若如下圖表示成功了，但由於我們沒有設置<code>index.html</code> 所以只能看到根目錄</p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-dev-compile-output.jpg" alt="Untitled"></p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-dev-compile-demo.jpg" alt="Untitled"></p><div class="note warning flat"><p>關於html部份，由於進入點(entry)的index.js不用把html引入，反而是html需要引入index.js。因此我們會需要html-webpack-plugin套件幫助我們編譯後直接幫我們的html樣本引入編譯好的js檔案。</p></div><h4 id="安裝html-webpack-plugin"><a href="#安裝html-webpack-plugin" class="headerlink" title="安裝html-webpack-plugin"></a>安裝html-webpack-plugin</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install html-webpack-plugin@4.5.2 --save-dev</span><br></pre></td></tr></table></figure><ul><li>在webpack.config.common.js增加插件設定設定</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">context</span>: path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>), <span class="comment">// 設定編譯時的根目錄</span></span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;[name].bundle.js&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">    &#125;,  </span><br><span class="line">    <span class="attr">plugins</span>:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>新增src/index.html檔案</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如此我們再次執行就會得到空白的畫面以及console面板的Hello World!</p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-dev-server-console.jpg" alt="Untitled"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依-dev-和-prod-環境分別撰寫webpack設定檔-功能測試-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>沒意外的話，輸入資料夾dist中應該會有main.bundle.js以及剛剛加入的plugin所幫我們產生的index.html<br><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-html-plugin.jpg" alt="Untitled"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="添加Webpack模組編譯規則"><a href="#添加Webpack模組編譯規則" class="headerlink" title="添加Webpack模組編譯規則"></a>添加Webpack模組編譯規則</h2><p>我們已經將基本環境架構設置完畢了，接著就可以依需求安裝需要的套件跟按照環境撰寫不同的設定。不過我們為了能夠編譯各種靜態資源還得個別添加模組規則。</p><h3 id="為什麼要添加模組編譯規則"><a href="#為什麼要添加模組編譯規則" class="headerlink" title="為什麼要添加模組編譯規則"></a>為什麼要添加模組編譯規則</h3><p>事實上webpack並不知道你的靜態資源要怎麼編譯，而且它沒辦法獨立完成這項作業。在下圖可以看到我添加了css檔案並在index.js引入，編譯後出現錯誤訊息。<br><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-css-fail-output.jpg" alt="Untitled"></p><div class="note danger flat"><p>「 你需要<strong>合適的loader</strong>來處理這個<strong>檔案類型</strong>，目前這個檔案類型沒有設定任何的loader 」</p></div><p>由此可以得知我們必須添加規則設置loader給css的類型檔案，另外webpack本身並沒有各種靜態資源的loader，因此我們還需要額外安裝。</p><p>所以添加模組規則會有2件事情要執行：</p><ol><li><strong>安裝需要的loader</strong></li><li><strong>在webpack設定檔撰寫模組編譯規則</strong></li></ol><h3 id="添加CSS編譯規則"><a href="#添加CSS編譯規則" class="headerlink" title="添加CSS編譯規則"></a>添加CSS編譯規則</h3><p>若要編譯CSS我們必須安裝mini-css-extract-plugin(或style-loader)和css-loader，先解釋他們分別處理什麼：</p><div class="note info flat"><p><strong>mini-css-extract-plugin</strong> ：為每個包含 CSS 的 JS 檔案創建一個單獨的 CSS 檔，且支援CSS和SourceMap需要時載載入<br><strong>style-loader</strong> ：將CSS注入到HTML的 <code>&lt;style&gt;&lt;/style&gt;</code> 標籤上<br><strong>css-loader</strong> ：處理在js中用 <code>@import url() || import/require()</code> 引入的css檔(還只是個檔案)</p></div><p>可以看到mini-css-extract-plugin已經幫我們處理style-loader的工作了，且功能更豐富</p><h4 id="安裝指令"><a href="#安裝指令" class="headerlink" title="安裝指令"></a>安裝指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mini-css-extract-plugin@1.6.2 css-loader@4.3.0 --save-dev</span><br></pre></td></tr></table></figure><h4 id="撰寫模組編譯規則"><a href="#撰寫模組編譯規則" class="headerlink" title="撰寫模組編譯規則"></a>撰寫模組編譯規則</h4><div class="tabs" id="添加css編譯規則-撰寫模組編譯規則"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#添加css編譯規則-撰寫模組編譯規則-1">webpack.config.common.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="添加css編譯規則-撰寫模組編譯規則-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">context</span>: path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>), <span class="comment">// 設定編譯時的根目錄</span></span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;[name].bundle.js&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">    &#125;,  </span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                use: [ MiniCssExtractPlugin.loader, <span class="string">&quot;css-loader&quot;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note warning flat"><p>在rule中以物件方式加入各個規則<br>其中test辨別該規則的條件(使用正則表示法)，如上述為符合css檔案<br>一個rule可以設置多個loader，但這邊要注意執行順序是(由下至上、由右至左)</p></div><p>在生產環境中我們可以使用optimize-css-assets-webpack-plugin外掛來優化、最小化CSS</p><h4 id="安裝optimize-css-assets-webpack-plugin"><a href="#安裝optimize-css-assets-webpack-plugin" class="headerlink" title="安裝optimize-css-assets-webpack-plugin"></a>安裝optimize-css-assets-webpack-plugin</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install optimize-css-assets-webpack-plugin@5.0.4 --save-dev</span><br></pre></td></tr></table></figure><h4 id="加入插件"><a href="#加入插件" class="headerlink" title="加入插件"></a>加入插件</h4><div class="tabs" id="安裝optimize-css-assets-webpack-plugin-加入插件"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#安裝optimize-css-assets-webpack-plugin-加入插件-1">webpack.config.prod.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="安裝optimize-css-assets-webpack-plugin-加入插件-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> commonWebpackConfig = <span class="built_in">require</span>(<span class="string">&quot;./webpack.config.common&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> OptimizeCssAssetsPlugin = <span class="built_in">require</span>(<span class="string">&#x27;optimize-css-assets-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(commonWebpackConfig, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;production&quot;</span>,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> OptimizeCssAssetsPlugin(&#123;</span><br><span class="line">            <span class="attr">cssProcessorPluginOptions</span>: &#123;</span><br><span class="line">              <span class="attr">preset</span>: [<span class="string">&#x27;default&#x27;</span>, &#123; <span class="attr">discardComments</span>: &#123; <span class="attr">removeAll</span>: <span class="literal">true</span> &#125; &#125;],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line"></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="測試環節-2"><a href="#測試環節-2" class="headerlink" title="測試環節"></a>測試環節</h4><p>若成功的話，在開發環境的網頁上可以看到我們套用的CSS囉！在生產環境則在dist/main.css可以看到壓縮後的css</p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-css-min-compile.jpg" alt="Untitled"></p><h3 id="添加JS編譯規則"><a href="#添加JS編譯規則" class="headerlink" title="添加JS編譯規則"></a>添加JS編譯規則</h3><p>webpack預設支援編譯js檔，但無法將ES6以上版本語法編譯至ES5版本。雖然大多瀏覽器開始支援ES6語法，不過ES5版本還是較為穩定且兼容度高。babel是專門處理JavaScript編譯器的工具，因此這裡需要使用babel-loader幫助我們轉換ES6以上版本語法。</p><h4 id="安裝指令-1"><a href="#安裝指令-1" class="headerlink" title="安裝指令"></a>安裝指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-loader@8.2.2 @babel/core@7.15.5 @babel/preset-env@7.15.4 --save-dev</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><strong>@babel/core</strong> 為babel的核心<br><strong>@babel/preset-env</strong> 為將大部分瀏覽器尚未支援的 js語法轉換成能被瀏覽器支援的語法</p></div><h4 id="撰寫模組編譯規則-1"><a href="#撰寫模組編譯規則-1" class="headerlink" title="撰寫模組編譯規則"></a>撰寫模組編譯規則</h4><div class="tabs" id="添加js編譯規則-撰寫模組編譯規則"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#添加js編譯規則-撰寫模組編譯規則-1">webpack.config.common.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="添加js編譯規則-撰寫模組編譯規則-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">context</span>: path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>), <span class="comment">// 設定編譯時的根目錄</span></span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;[name].bundle.js&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.resolve(__dirname, <span class="string">&#x27;../dist&#x27;</span>),</span><br><span class="line">    &#125;,  </span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                use: [ MiniCssExtractPlugin.loader, <span class="string">&quot;css-loader&quot;</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">                    <span class="attr">options</span>: &#123;</span><br><span class="line">                        <span class="attr">presets</span>: [</span><br><span class="line">                            [<span class="string">&#x27;@babel/preset-env&#x27;</span>, &#123; <span class="attr">targets</span>: <span class="string">&quot;defaults&quot;</span> &#125;]</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="測試環節-3"><a href="#測試環節-3" class="headerlink" title="測試環節"></a>測試環節</h4><p>這邊我使用es6的物件解構。若成功的話，編譯後檔案會發現看不到這種語法</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Hello World!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> date = &#123;</span><br><span class="line">    <span class="attr">year</span>: <span class="number">2021</span>,</span><br><span class="line">    <span class="attr">month</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">day</span>: <span class="number">9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;year, month&#125; = date</span><br><span class="line"><span class="built_in">console</span>.log(year,month)</span><br></pre></td></tr></table></figure><h3 id="添加image編譯規則"><a href="#添加image編譯規則" class="headerlink" title="添加image編譯規則"></a>添加image編譯規則</h3><p>圖片類型的靜態資源，我們也必須給予編譯規則。這邊會用到url-loader、file-loader、image-webpack-loader三種loader，以下分別為他們的用途。</p><div class="note info flat"><p><strong>url-loader</strong> ：載入檔案並轉為base64編碼，嵌入至js檔內<br><strong>file-loader</strong> ：處理引入的檔案物件、輸出目錄和它的url<br><strong>image-webpack-loader</strong> ：將圖片壓縮優化</p></div><p>一般file-loader就能讓我們可以正常使用了，而url-loader可以設定檔案下限，將檔案嵌入js檔減少之後網頁渲染時request次數。</p><h4 id="安裝指令-2"><a href="#安裝指令-2" class="headerlink" title="安裝指令"></a>安裝指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install url-loader@4.1.1 file-loader@6.2.0 image-webpack-loader@7.0.1</span><br></pre></td></tr></table></figure><h4 id="撰寫模組編譯規則-2"><a href="#撰寫模組編譯規則-2" class="headerlink" title="撰寫模組編譯規則"></a>撰寫模組編譯規則</h4><div class="tabs" id="添加image編譯規則-撰寫模組編譯規則"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#添加image編譯規則-撰寫模組編譯規則-1">webpack.config.dev.js</button></li><li class="tab"><button type="button" data-href="#添加image編譯規則-撰寫模組編譯規則-2">webpack.config.prod.js</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="添加image編譯規則-撰寫模組編譯規則-1"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> commonWebpackConfig = <span class="built_in">require</span>(<span class="string">&quot;./webpack.config.common&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(commonWebpackConfig, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">port</span>: <span class="number">8080</span>,</span><br><span class="line">        <span class="attr">hot</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|jfif|svg)$/i</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">                        <span class="attr">options</span>: &#123;</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;assets/images/[hash:7].[ext]&#x27;</span>,</span><br><span class="line">                            <span class="attr">limit</span>: <span class="number">8192</span>,</span><br><span class="line">                            <span class="attr">esModule</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="添加image編譯規則-撰寫模組編譯規則-2"><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> commonWebpackConfig = <span class="built_in">require</span>(<span class="string">&quot;./webpack.config.common&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> OptimizeCssAssetsPlugin = <span class="built_in">require</span>(<span class="string">&#x27;optimize-css-assets-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(commonWebpackConfig, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;production&quot;</span>,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> OptimizeCssAssetsPlugin(&#123;</span><br><span class="line">            <span class="attr">cssProcessorPluginOptions</span>: &#123;</span><br><span class="line">              <span class="attr">preset</span>: [<span class="string">&#x27;default&#x27;</span>, &#123; <span class="attr">discardComments</span>: &#123; <span class="attr">removeAll</span>: <span class="literal">true</span> &#125; &#125;],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpe?g|gif|jfif|svg)$/i</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">                        <span class="attr">options</span>: &#123;</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;assets/images/[hash:7].[ext]&#x27;</span>,</span><br><span class="line">                            <span class="attr">limit</span>: <span class="number">8192</span>,</span><br><span class="line">                            <span class="attr">esModule</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">loader</span>: <span class="string">&#x27;image-webpack-loader&#x27;</span>,</span><br><span class="line">                        <span class="attr">options</span>: &#123;</span><br><span class="line">                            <span class="attr">mozjpeg</span>: &#123;</span><br><span class="line">                                <span class="attr">progressive</span>: <span class="literal">true</span>,</span><br><span class="line">                                <span class="attr">quality</span>: <span class="number">65</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">optipng</span>: &#123;</span><br><span class="line">                                <span class="attr">enabled</span>: <span class="literal">false</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">pngquant</span>: &#123;</span><br><span class="line">                                <span class="attr">quality</span>: [<span class="number">0.65</span>, <span class="number">0.9</span>],</span><br><span class="line">                                <span class="attr">speed</span>: <span class="number">4</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">gifsicle</span>: &#123;</span><br><span class="line">                                <span class="attr">interlaced</span>: <span class="literal">false</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">webp</span>: &#123;</span><br><span class="line">                                <span class="attr">quality</span>: <span class="number">75</span>,</span><br><span class="line">                            &#125;,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="測試環節-4"><a href="#測試環節-4" class="headerlink" title="測試環節"></a>測試環節</h4><p>我們試著拿幾張不同大小的圖片引入js檔編譯看看</p><p>如下圖可以看到原始資產中有3張圖片，但輸出資料夾只有2張，因為有一張圖片大小僅5KB，而我們在url-loader設置的限制為10KB，因此被以base64編碼寫至main.bundle.js</p><p><img src="https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/webpack-image-loader-prod-output.jpg" alt="Untitled"></p><div class="note warning flat"><p>file-loader處理檔案物件，也可以應用在音訊、字型、文件檔等等<br>url-loader也是相同概念，不過要注意大小限制，過度使用反而讓js檔肥大</p></div><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>看完可以發現並沒有什麼太複雜的概念，webpack就像一個容器讓我們組裝所需的內容, 而只要知道各個零件的用途與設置就可以添加各個需求。不過webpack依然還有須多可以研究的，例如考量網頁效能與體驗上如何最佳化編譯靜態資源將會是很重要的課題。</p><p>最後附上本次實作的程式碼</p><div><a class='link-card' title='https://github.com/SP12893678/webpack-dev-server-learning' href='https://github.com/SP12893678/webpack-dev-server-learning'><div class='left'><img src=https://cdn.jsdelivr.net/gh/sp12893678/blog@gh-pages/img/github.svg></div><div class='right'><p class='text'>webpack-dev-server-learning</p><p class='url'>https://github.com/SP12893678/webpack-dev-server-learning</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端打包工具 </tag>
            
            <tag> webpack </tag>
            
            <tag> webpack-dev-server </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
